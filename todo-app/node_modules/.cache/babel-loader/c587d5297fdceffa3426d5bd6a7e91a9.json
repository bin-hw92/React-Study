{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\\\todo-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction createBulkTodos() {\n  const array = [];\n\n  for (let i = 1; i <= 2500; i++) {\n    array.push({\n      id: i,\n      text: `할 일 {i}`,\n      checked: false\n    });\n  }\n\n  return array;\n}\n\nconst App = () => {\n  _s();\n\n  const [todos, setTodos] = useState(createBulkTodos); //고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n\n  const nextId = useRef(4);\n  const onInsert = useCallback(text => {\n    const todo = {\n      id: nextId.current,\n      text,\n      checked: false\n    };\n    setTodos(todos.concat(todo));\n    nextId.current += 1; //nextId 1씩 더하기\n  }, [todos]);\n  const onRemove = useCallback(id => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }, [todos]);\n  const onToggle = useCallback(id => {\n    setTodos(todos.map(todo => todo.id === id ? { ...todo,\n      checked: !todo.checked\n    } : todo));\n  }, [todos]);\n  return /*#__PURE__*/_jsxDEV(TodoTemplate, {\n    children: [/*#__PURE__*/_jsxDEV(TodoInsert, {\n      onInsert: onInsert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      onRemove: onRemove,\n      onToggle: onToggle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"19jPfAucTjmKWf5YvbgDjRVyPZE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/react/todo-app/src/App.js"],"names":["React","useCallback","useRef","useState","TodoInsert","TodoList","TodoTemplate","createBulkTodos","array","i","push","id","text","checked","App","todos","setTodos","nextId","onInsert","todo","current","concat","onRemove","filter","onToggle","map"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,MAA7B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;;AAEA,SAASC,eAAT,GAA0B;AACxB,QAAMC,KAAK,GAAG,EAAd;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,IAAI,IAAlB,EAAwBA,CAAC,EAAzB,EAA4B;AAC1BD,IAAAA,KAAK,CAACE,IAAN,CAAW;AACTC,MAAAA,EAAE,EAAEF,CADK;AAETG,MAAAA,IAAI,EAAG,SAFE;AAGTC,MAAAA,OAAO,EAAG;AAHD,KAAX;AAKD;;AACD,SAAOL,KAAP;AACD;;AAED,MAAMM,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAACI,eAAD,CAAlC,CADgB,CAGhB;AACA;;AACA,QAAMU,MAAM,GAAGf,MAAM,CAAC,CAAD,CAArB;AAEA,QAAMgB,QAAQ,GAAGjB,WAAW,CAC1BW,IAAI,IAAI;AACN,UAAMO,IAAI,GAAG;AACXR,MAAAA,EAAE,EAAGM,MAAM,CAACG,OADD;AAEXR,MAAAA,IAFW;AAGXC,MAAAA,OAAO,EAAE;AAHE,KAAb;AAKAG,IAAAA,QAAQ,CAACD,KAAK,CAACM,MAAN,CAAaF,IAAb,CAAD,CAAR;AACAF,IAAAA,MAAM,CAACG,OAAP,IAAkB,CAAlB,CAPM,CAOe;AACtB,GATyB,EAU1B,CAACL,KAAD,CAV0B,CAA5B;AAaA,QAAMO,QAAQ,GAAGrB,WAAW,CAC1BU,EAAE,IAAI;AACJK,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaJ,IAAI,IAAIA,IAAI,CAACR,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAHyB,EAI1B,CAACI,KAAD,CAJ0B,CAA5B;AAOA,QAAMS,QAAQ,GAAGvB,WAAW,CAC1BU,EAAE,IAAI;AACJK,IAAAA,QAAQ,CACND,KAAK,CAACU,GAAN,CAAUN,IAAI,IACZA,IAAI,CAACR,EAAL,KAAYA,EAAZ,GAAiB,EAAC,GAAGQ,IAAJ;AAAUN,MAAAA,OAAO,EAAE,CAACM,IAAI,CAACN;AAAzB,KAAjB,GACEM,IAFJ,CADM,CAAR;AAMD,GARyB,EAS1B,CAACJ,KAAD,CAT0B,CAA5B;AAYA,sBACE,QAAC,YAAD;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEG;AAAtB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEH,KAAjB;AAAwB,MAAA,QAAQ,EAAEO,QAAlC;AAA4C,MAAA,QAAQ,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CA7CD;;GAAMV,G;;KAAAA,G;AA+CN,eAAeA,GAAf","sourcesContent":["import React, { useCallback, useRef, useState } from 'react';\nimport TodoInsert from './components/TodoInsert';\nimport TodoList from './components/TodoList';\nimport TodoTemplate from './components/TodoTemplate';\n\nfunction createBulkTodos(){\n  const array = [];\n  for(let i=1; i <= 2500; i++){\n    array.push({\n      id: i,\n      text: `할 일 {i}`,\n      checked : false,\n    });\n  }\n  return array;\n}\n\nconst App = () => {\n  const [todos, setTodos] = useState(createBulkTodos);\n\n  //고윳값으로 사용될 id\n  // ref를 사용하여 변수 담기\n  const nextId = useRef(4);\n\n  const onInsert = useCallback(\n    text => {\n      const todo = {\n        id : nextId.current,\n        text,\n        checked: false,\n      };\n      setTodos(todos.concat(todo));\n      nextId.current += 1; //nextId 1씩 더하기\n    },\n    [todos],\n  );\n\n  const onRemove = useCallback(\n    id => {\n      setTodos(todos.filter(todo => todo.id !== id));\n    },\n    [todos],\n  );\n  \n  const onToggle = useCallback(\n    id => {\n      setTodos(\n        todos.map(todo => \n          todo.id === id ? {...todo, checked: !todo.checked} :\n            todo,\n          ),\n      );\n    },\n    [todos],\n  );\n\n  return (\n    <TodoTemplate>\n      <TodoInsert onInsert={onInsert}/>\n      <TodoList todos={todos} onRemove={onRemove} onToggle={onToggle}/>\n    </TodoTemplate>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}